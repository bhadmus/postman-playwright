{
	"info": {
		"_postman_id": "be269632-0ce3-4a72-82a0-af171d16cf1c",
		"name": "platzi-fake-api-testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4496516"
	},
	"item": [
		{
			"name": "Product",
			"item": [
				{
					"name": "All products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 700ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(700);",
									"});",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has an array with at least one product\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
									"});",
									"",
									"",
									"pm.test(\"Each product in the array has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(product) {",
									"        pm.expect(product).to.include.all.keys('id', 'title', 'price', 'description', 'images', 'creationAt', 'updatedAt', 'category');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Each image in the 'images' array is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(product) {",
									"        pm.expect(product.images).to.be.an('array');",
									"        product.images.forEach(function(image) {",
									"            pm.expect(image).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Image should not be empty\");",
									"        });",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Verify that the 'category' object is present in each product and contains expected fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(product) {",
									"        pm.expect(product.category).to.exist;",
									"        pm.expect(product.category).to.have.property('id');",
									"        pm.expect(product.category).to.have.property('name');",
									"        pm.expect(product.category).to.have.property('image');",
									"        pm.expect(product.category).to.have.property('creationAt');",
									"        pm.expect(product.category).to.have.property('updatedAt');",
									"    });",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/products",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "single product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"console.log('I am learning API testing')"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 700ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(700);",
									"});",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Content-Type header is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Validate the product object\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.id).to.exist.and.to.be.a('number');",
									"    pm.expect(responseData.title).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.price).to.exist.and.to.be.a('number');",
									"    pm.expect(responseData.description).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.images).to.exist.and.to.be.an('array');",
									"    responseData.images.forEach(function(image) {",
									"        pm.expect(image).to.be.a('string');",
									"    });",
									"    pm.expect(responseData.creationAt).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.updatedAt).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.category).to.exist.and.to.be.an('object');",
									"    pm.expect(responseData.category.id).to.exist.and.to.be.a('number');",
									"    pm.expect(responseData.category.name).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.category.image).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.category.creationAt).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.category.updatedAt).to.exist.and.to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"Price is a non-negative number\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.price).to.exist.and.to.be.a('number').and.to.be.at.least(0);",
									"});",
									"",
									"",
									"pm.test(\"Images array is present and contains at least one element\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.images).to.exist.and.to.be.an('array').that.is.not.empty;",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/products/26",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"products",
								"26"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var item_name = \"Sakirat\""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var resp = pm.response.json()",
									"var product_id = resp.id",
									"pm.collectionVariables.set(\"productId\", product_id)",
									"",
									"pm.test(\"Response time is less than 700ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(700);",
									"});",
									"",
									"pm.test(\"Response status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"pm.test(\"Price field is a positive number\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.price).to.be.a('number').and.to.be.greaterThan(0);",
									"});",
									"",
									"",
									"pm.test(\"Response status code is 201\", function () {",
									"  pm.expect(pm.response.code).to.equal(201);",
									"});",
									"",
									"",
									"pm.test(\"Price field is a positive number\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.price).to.be.above(0);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 700ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(700);",
									"});",
									"",
									"",
									"pm.test(\"Response schema is valid\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.title).to.be.a('string');",
									"    pm.expect(responseData.price).to.be.a('number');",
									"    pm.expect(responseData.description).to.be.a('string');",
									"    ",
									"    pm.expect(responseData.images).to.be.an('array');",
									"    responseData.images.forEach(function(image) {",
									"        pm.expect(image).to.be.a('string');",
									"    });",
									"    ",
									"    pm.expect(responseData.category).to.be.an('object');",
									"    pm.expect(responseData.category.id).to.be.a('number');",
									"    pm.expect(responseData.category.name).to.be.a('string');",
									"    pm.expect(responseData.category.image).to.be.a('string');",
									"    pm.expect(responseData.category.creationAt).to.be.a('string');",
									"    pm.expect(responseData.category.updatedAt).to.be.a('string');",
									"    ",
									"    pm.expect(responseData.id).to.be.a('number');",
									"    pm.expect(responseData.creationAt).to.be.a('string');",
									"    pm.expect(responseData.updatedAt).to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"Verify the required fields in the response\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.title).to.exist;",
									"    pm.expect(responseData.price).to.exist;",
									"    pm.expect(responseData.description).to.exist;",
									"    pm.expect(responseData.images).to.exist;",
									"    pm.expect(responseData.category).to.exist;",
									"    pm.expect(responseData.id).to.exist;",
									"    pm.expect(responseData.creationAt).to.exist;",
									"    pm.expect(responseData.updatedAt).to.exist;",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Club\",\r\n  \"price\": 10,\r\n  \"description\": \"A place where we party\",\r\n  \"categoryId\": 1,\r\n  \"images\": [\"https://placeimg.com/640/480/any\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/products/",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Club\",\r\n  \"price\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/products/{{productId}}",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 700ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(700);",
									"});",
									"",
									"  pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"  });",
									"",
									"",
									"pm.test(\"Response content type is text/html\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/html\");",
									"});",
									"",
									"",
									"pm.test(\"Response body is a boolean value\", function () {",
									"    pm.expect(pm.response.text()).to.be.a('string');",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/products/{{productId}}",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "All categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 700ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(700);",
									"});",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - id, name, image, creationAt, and updatedAt\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(category) {",
									"        pm.expect(category).to.have.property('id');",
									"        pm.expect(category).to.have.property('name');",
									"        pm.expect(category).to.have.property('image');",
									"        pm.expect(category).to.have.property('creationAt');",
									"        pm.expect(category).to.have.property('updatedAt');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Image URL is valid and accessible\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('array').that.is.not.empty;",
									"  ",
									"  responseData.forEach(category => {",
									"    pm.expect(category.image).to.be.a('string');",
									"    // pm.expect(category.image).to.match(/^https?:\\/\\//);",
									"  });",
									"});",
									"",
									"",
									"pm.test(\"Creation and update timestamps are in a valid date format\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    responseData.forEach(function(category) {",
									"        pm.expect(category).to.have.property('creationAt').to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/, \"Creation timestamp should be in valid date format\");",
									"        pm.expect(category).to.have.property('updatedAt').to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/, \"Update timestamp should be in valid date format\");",
									"    });",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/categories",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Single category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/categories/3",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Electronics\",\r\n  \"image\": \"https://placeimg.com/640/480/any\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/categories",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update category",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Love is light\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/categories/3",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete category",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/categories/3",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "All products by category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/categories/1/products",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"1",
								"products"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "All users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/users",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Single user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/users/1",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Dovdale\",\r\n  \"email\": \"dovdale@gmail.com\",\r\n  \"password\": \"1234\",\r\n  \"avatar\": \"https://picsum.photos/800\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/users/",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"johnyman@gmail.com\",\r\n  \"name\": \"john\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/users/9",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"users",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"john@mail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.escuelajs.co/api/v1/users/is-available",
							"protocol": "https",
							"host": [
								"api",
								"escuelajs",
								"co"
							],
							"path": [
								"api",
								"v1",
								"users",
								"is-available"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "musa",
			"value": ""
		},
		{
			"key": "productId",
			"value": ""
		}
	]
}